#! /bin/bash

set -o pipefail

t=__wt.$$
trap 'rm -rf $t' 0 1 2 3 13 15

# Find the top-level WiredTiger directory.
dest_dir=$(git rev-parse --show-toplevel)

# If this is a MongoDB source tree, move to the WiredTiger subtree.
git_repo_str=$(git config remote.origin.url)
is_mongo_repo=$(echo "$git_repo_str" | grep "mongodb/mongo")
if [ -n "$is_mongo_repo" ] ; then
       dest_dir="$dest_dir/src/third_party/wiredtiger"
fi
cd "$dest_dir" || exit 1

# Check if Clang-Format is already available with the desired version.
desired_version="12.0.1"
if ! command -v clang-format &> /dev/null; then
    echo "Failed to find clang-format, make sure the binary (version: $desired_version) is in your env PATH."
    exit 1
fi
if ! clang-format --version | grep -q $desired_version; then
    echo "The binary $(which clang-format) does not have the expected version: $desired_version."
    exit 1
fi

exclude=true
case $# in
0)
    # Get all source files.
    search=`find bench examples ext src test -name '*.[ch]' -o -name '*.cpp'`
    ;;
1)
    # If the -F option is not specified then find every source file.
    if [ $1 == "-F" ]; then
        # We are running in fast mode, get all the source files modified according to git.
        search=`git diff --name-only $(git merge-base --fork-point develop) | grep -E '\.(c|h|cpp)$'`
    else
        search="$1"
        exclude=false
    fi
    ;;
*)
    echo "usage: $0 [-F] [file]"
    echo "-F apply clang format to modified source files in the git index"
    echo "Only a file or -F can be provided"
    exit 1
    ;;
esac

if $exclude; then
    for f in `cat dist/s_clang_format.list`; do
        search=`echo "$search" | sed "\#$f#d"`
    done
fi

# Don't format inplace with -i flag.
# We want to be able to detect modifications.
for f in $search; do
    cat "$f" | \
            clang-format --fallback-style=none | \
            python dist/s_comment.py > "$t" || exit 1
    cmp -s "$f" "$t"
    if test $? -ne 0; then
        if test $# -eq 0 ; then
            echo "Modifying $f"
        fi
        cp "$t" "$f"
    fi
done
